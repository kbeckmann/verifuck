$date
	Mon Jul  2 17:25:31 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module bf_tb $end
$var wire 8 ! data_temp0 [7:0] $end
$var wire 8 " data_temp1 [7:0] $end
$var wire 8 # data_temp2 [7:0] $end
$var wire 8 $ data_temp3 [7:0] $end
$var wire 8 % prog_temp0 [7:0] $end
$var wire 8 & prog_temp1 [7:0] $end
$var wire 8 ' prog_temp2 [7:0] $end
$var wire 8 ( prog_temp3 [7:0] $end
$var wire 1 ) stdout_en $end
$var wire 8 * stdout [7:0] $end
$var wire 8 + prog_rval [7:0] $end
$var wire 1 , prog_ren $end
$var wire 8 - prog_addr [7:0] $end
$var wire 8 . data_wval [7:0] $end
$var wire 1 / data_wen $end
$var wire 8 0 data_rval [7:0] $end
$var wire 1 1 data_ren $end
$var wire 8 2 data_addr [7:0] $end
$var reg 1 3 clk $end
$var reg 1 4 reset $end
$scope module data_ram $end
$var wire 1 3 clk $end
$var wire 1 / wen $end
$var wire 8 5 wdata [7:0] $end
$var wire 8 6 waddr [7:0] $end
$var wire 1 1 ren $end
$var wire 8 7 raddr [7:0] $end
$var reg 8 8 rdata [7:0] $end
$upscope $end
$scope module myproc $end
$var wire 1 3 clk $end
$var wire 8 9 data_rval [7:0] $end
$var wire 8 : register [7:0] $end
$var wire 1 4 reset $end
$var wire 8 ; prog_rval [7:0] $end
$var reg 8 < data_addr [7:0] $end
$var reg 1 1 data_ren $end
$var reg 1 / data_wen $end
$var reg 8 = data_wval [7:0] $end
$var reg 8 > prog_addr [7:0] $end
$var reg 1 , prog_ren $end
$var reg 3 ? state [2:0] $end
$var reg 8 @ stdout [7:0] $end
$var reg 1 ) stdout_en $end
$upscope $end
$scope module program_rom $end
$var wire 1 3 clk $end
$var wire 8 A raddr [7:0] $end
$var wire 1 , ren $end
$var reg 8 B rdata [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx B
b0 A
b0 @
b0 ?
b0 >
bx =
b0 <
bx ;
bx :
bx 9
bx 8
b0 7
b0 6
bx 5
14
13
b0 2
01
bx 0
0/
bx .
b0 -
0,
bx +
b0 *
x)
b111110 (
b101110 '
b111110 &
b101110 %
b1000100 $
b1000011 #
b1000010 "
b1000001 !
$end
#10
03
#20
0)
13
#30
03
04
#40
b1 ?
11
1,
13
#50
03
#60
b101110 +
b101110 ;
b101110 B
b1000001 :
b1000001 0
b1000001 8
b1000001 9
b10 ?
01
0,
13
#70
03
#80
1)
b1000001 *
b1000001 @
b1 ?
b1 -
b1 >
b1 A
11
1,
13
#90
03
#100
b111110 +
b111110 ;
b111110 B
b10 ?
0)
01
0,
13
#110
03
#120
b1 2
b1 6
b1 7
b1 <
b1 ?
b10 -
b10 >
b10 A
11
1,
13
#130
03
#140
b101110 +
b101110 ;
b101110 B
b1000010 :
b1000010 0
b1000010 8
b1000010 9
b10 ?
01
0,
13
#150
03
#160
1)
b1000010 *
b1000010 @
b1 ?
b11 -
b11 >
b11 A
11
1,
13
#170
03
#180
b111110 +
b111110 ;
b111110 B
b10 ?
0)
01
0,
13
#190
03
#200
b10 2
b10 6
b10 7
b10 <
b1 ?
b100 -
b100 >
b100 A
11
1,
13
#210
03
#220
b101110 +
b101110 ;
b101110 B
b1000011 :
b1000011 0
b1000011 8
b1000011 9
b10 ?
01
0,
13
#230
03
#240
1)
b1000011 *
b1000011 @
b1 ?
b101 -
b101 >
b101 A
11
1,
13
#250
03
#260
b111110 +
b111110 ;
b111110 B
b10 ?
0)
01
0,
13
#270
03
#280
b11 2
b11 6
b11 7
b11 <
b1 ?
b110 -
b110 >
b110 A
11
1,
13
#290
03
#300
b1000100 :
b1000100 0
b1000100 8
b1000100 9
b10 ?
01
0,
13
#310
03
#320
b100 2
b100 6
b100 7
b100 <
b1 ?
b111 -
b111 >
b111 A
11
1,
13
#330
03
#340
b1000101 :
b1000101 0
b1000101 8
b1000101 9
b10 ?
01
0,
13
#350
03
#360
b101 2
b101 6
b101 7
b101 <
b1 ?
b1000 -
b1000 >
b1000 A
11
1,
13
#370
03
#380
b101110 +
b101110 ;
b101110 B
b1000110 :
b1000110 0
b1000110 8
b1000110 9
b10 ?
01
0,
13
#390
03
#400
1)
b1000110 *
b1000110 @
b1 ?
b1001 -
b1001 >
b1001 A
11
1,
13
#410
03
#420
b10 ?
0)
01
0,
13
#430
03
#440
1)
b1 ?
b1010 -
b1010 >
b1010 A
11
1,
13
#450
03
#460
b10 ?
0)
01
0,
13
#470
03
#480
1)
b1 ?
b1011 -
b1011 >
b1011 A
11
1,
13
#490
03
#500
bx +
bx ;
bx B
b10 ?
0)
01
0,
13
#510
03
#520
b0 2
b0 6
b0 7
b0 <
b1 ?
b0 -
b0 >
b0 A
11
1,
13
#530
03
#540
b101110 +
b101110 ;
b101110 B
b1000001 :
b1000001 0
b1000001 8
b1000001 9
b10 ?
01
0,
13
#550
03
#560
1)
b1000001 *
b1000001 @
b1 ?
b1 -
b1 >
b1 A
11
1,
13
#570
03
#580
b111110 +
b111110 ;
b111110 B
b10 ?
0)
01
0,
13
#590
03
#600
b1 2
b1 6
b1 7
b1 <
b1 ?
b10 -
b10 >
b10 A
11
1,
13
#610
03
#620
b101110 +
b101110 ;
b101110 B
b1000010 :
b1000010 0
b1000010 8
b1000010 9
b10 ?
01
0,
13
#630
03
#640
1)
b1000010 *
b1000010 @
b1 ?
b11 -
b11 >
b11 A
11
1,
13
#650
03
#660
b111110 +
b111110 ;
b111110 B
b10 ?
0)
01
0,
13
#670
03
#680
b10 2
b10 6
b10 7
b10 <
b1 ?
b100 -
b100 >
b100 A
11
1,
13
#690
03
#700
b101110 +
b101110 ;
b101110 B
b1000011 :
b1000011 0
b1000011 8
b1000011 9
b10 ?
01
0,
13
#710
03
#720
1)
b1000011 *
b1000011 @
b1 ?
b101 -
b101 >
b101 A
11
1,
13
#730
03
#740
b111110 +
b111110 ;
b111110 B
b10 ?
0)
01
0,
13
#750
03
#760
b11 2
b11 6
b11 7
b11 <
b1 ?
b110 -
b110 >
b110 A
11
1,
13
#770
03
#780
b1000100 :
b1000100 0
b1000100 8
b1000100 9
b10 ?
01
0,
13
#790
03
#800
b100 2
b100 6
b100 7
b100 <
b1 ?
b111 -
b111 >
b111 A
11
1,
13
#810
03
#820
b1000101 :
b1000101 0
b1000101 8
b1000101 9
b10 ?
01
0,
13
#830
03
#840
b101 2
b101 6
b101 7
b101 <
b1 ?
b1000 -
b1000 >
b1000 A
11
1,
13
#850
03
#860
b101110 +
b101110 ;
b101110 B
b1000110 :
b1000110 0
b1000110 8
b1000110 9
b10 ?
01
0,
13
#870
03
#880
1)
b1000110 *
b1000110 @
b1 ?
b1001 -
b1001 >
b1001 A
11
1,
13
#890
03
#900
b10 ?
0)
01
0,
13
#910
03
#920
1)
b1 ?
b1010 -
b1010 >
b1010 A
11
1,
13
#930
03
#940
b10 ?
0)
01
0,
13
#950
03
#960
1)
b1 ?
b1011 -
b1011 >
b1011 A
11
1,
13
#970
03
#980
bx +
bx ;
bx B
b10 ?
0)
01
0,
13
#990
03
#1000
b0 2
b0 6
b0 7
b0 <
b1 ?
b0 -
b0 >
b0 A
11
1,
13
#1010
03
#1020
b101110 +
b101110 ;
b101110 B
b1000001 :
b1000001 0
b1000001 8
b1000001 9
b10 ?
01
0,
13
#1030
03
